// Code generated by stickgen.
// DO NOT EDIT!

package manage

import (
	"fmt"
	"io"

	"github.com/tyler-sommer/stick"
)

func blockManageEditHtmlTwigContent(env *stick.Env, output io.Writer, ctx map[string]stick.Value) {
	// line 3, offset 19 in manage/edit.html.twig
	fmt.Fprint(output, `
<h4>Settings</h4>
<form method="post" action="/manage/update">
<div class="row">
	<div class="col-sm-12">
		<h2>IRC</h2>
	</div>
</div>
<div class="row">
	<div class="col-md-4 form-group">
		<label for="network">Network</label>
  		<input class="form-control" name="network" id="network" placeholder="irc.freenode.net:6667" value="`)
	// line 14, offset 103 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "Network")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 14, offset 123 in manage/edit.html.twig
	fmt.Fprint(output, `">
		<div class="checkbox">
			<label for="tls">
				<input type="checkbox" name="tls" id="tls" value="on" `)
	// line 17, offset 61 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "TLS")
		if err == nil && stick.CoerceBool(val) {
			// line 17, offset 77 in manage/edit.html.twig
			fmt.Fprint(output, `checked `)
		}
	}
	// line 17, offset 96 in manage/edit.html.twig
	fmt.Fprint(output, `> Use TLS
			</label>
		</div>
		<div class="checkbox">
			<label for="auto_connect">
				<input type="checkbox" name="auto_connect" id="auto_connect" value="on" `)
	// line 22, offset 79 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "AutoConnect")
		if err == nil && stick.CoerceBool(val) {
			// line 22, offset 103 in manage/edit.html.twig
			fmt.Fprint(output, `checked `)
		}
	}
	// line 22, offset 122 in manage/edit.html.twig
	fmt.Fprint(output, `> Connect to IRC when squIRCy2 starts
			</label>
		</div>
	</div>
</div>
<div class="row">
	<div class="col-md-4 form-group">
		<label for="nick">Bot Nickname</label>
  		<input class="form-control" name="nick" id="nick" placeholder="mrsquishy" value="`)
	// line 30, offset 85 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "Nick")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 30, offset 102 in manage/edit.html.twig
	fmt.Fprint(output, `">
	</div>
	<div class="col-md-4 form-group">
		<label for="username">Bot Username</label>
  		<input class="form-control" name="username" id="username" placeholder="mrjones" value="`)
	// line 34, offset 91 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "Username")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 34, offset 112 in manage/edit.html.twig
	fmt.Fprint(output, `">
	</div>
</div>
<div class="row">
	<div class="col-md-4 form-group">
		<label for="owner_nick">Owner Nickname</label>
  		<input class="form-control" name="owner_nick" id="owner_nick" placeholder="" value="`)
	// line 40, offset 88 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "OwnerNick")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 40, offset 110 in manage/edit.html.twig
	fmt.Fprint(output, `">
	</div>
	<div class="col-md-4 form-group">
		<label for="owner_host">Owner Hostname</label>
  		<input class="form-control" name="owner_host" id="owner_host" placeholder="" value="`)
	// line 44, offset 88 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "OwnerHost")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 44, offset 110 in manage/edit.html.twig
	fmt.Fprint(output, `">
	</div>
</div>
	<div class="row">
		<div class="col-md-4 form-group">
			<div class="checkbox">
				<label for="enable_sasl">
					<input type="checkbox" name="enable_sasl" id="enable_sasl" value="on" `)
	// line 51, offset 78 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "SASL")
		if err == nil && stick.CoerceBool(val) {
			// line 51, offset 95 in manage/edit.html.twig
			fmt.Fprint(output, `checked `)
		}
	}
	// line 51, offset 114 in manage/edit.html.twig
	fmt.Fprint(output, `> Enable SASL Authentication
				</label>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-md-4 form-group">
			<label for="sasl_nickname">SASL Username</label>
			<input class="form-control" name="sasl_username" id="sasl_username" placeholder="" value="`)
	// line 59, offset 93 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "SASLUsername")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 59, offset 118 in manage/edit.html.twig
	fmt.Fprint(output, `">
		</div>
		<div class="col-md-4 form-group">
			<label for="sasl_password">SASL Password</label>
			<input class="form-control" type="password" name="sasl_password" id="sasl_password" value="`)
	// line 63, offset 94 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "SASLPassword")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 63, offset 119 in manage/edit.html.twig
	fmt.Fprint(output, `">
		</div>
	</div>
<div class="row">
	<div class="col-sm-12">
		<h2>Script Management</h2>
	</div>
</div>
<div class="row">
	<div class="col-md-4 form-group">
		<div class="checkbox">
			<label for="scripts_as_files">
				<input type="checkbox" name="scripts_as_files" id="scripts_as_files" value="on" `)
	// line 75, offset 87 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "ScriptsAsFiles")
		if err == nil && stick.CoerceBool(val) {
			// line 75, offset 114 in manage/edit.html.twig
			fmt.Fprint(output, `checked `)
		}
	}
	// line 75, offset 133 in manage/edit.html.twig
	fmt.Fprint(output, `> Store Scripts on the Filesystem
			</label>
		</div>
	</div>
</div>
<div class="row">
	<div class="col-md-4 form-group">
		<label for="scripts_path">Scripts Storage Path</label>
		<input class="form-control" name="scripts_path" id="scripts_path" placeholder="`)
	// line 83, offset 81 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "RootPath")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 83, offset 102 in manage/edit.html.twig
	fmt.Fprint(output, `/scripts/" value="`)
	// line 83, offset 120 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "ScriptsPath")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 83, offset 144 in manage/edit.html.twig
	fmt.Fprint(output, `">
	</div>
	<div class="col-md-4 form-group">
		<label>Script Utilities</label><br>
		<div class="btn-group">
			<a id="export-scripts" class="btn btn-warning">Export to Filesystem</a>
			<a id="import-scripts" class="btn btn-danger">Import from Filesystem</a>
		</div>
	</div>
</div>
<div class="row">
	<div class="col-md-4 form-group">
		<div class="checkbox">
			<label for="enable_file_api">
				<input type="checkbox" name="enable_file_api" id="enable_file_api" value="on" `)
	// line 97, offset 85 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "EnableFileAPI")
		if err == nil && stick.CoerceBool(val) {
			// line 97, offset 111 in manage/edit.html.twig
			fmt.Fprint(output, `checked `)
		}
	}
	// line 97, offset 130 in manage/edit.html.twig
	fmt.Fprint(output, `> Enable Filesystem API in Scripts
			</label>
		</div>
	</div>
</div>
<div class="row">
	<div class="col-md-4 form-group">
		<label for="file_api_root">File API Root Path</label>
		<input class="form-control" name="file_api_root" id="file_api_root" placeholder="`)
	// line 105, offset 83 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "RootPath")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 105, offset 104 in manage/edit.html.twig
	fmt.Fprint(output, `/storage/" value="`)
	// line 105, offset 122 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "FileAPIRoot")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 105, offset 146 in manage/edit.html.twig
	fmt.Fprint(output, `">
	</div>
</div>
<div class="row">
	<div class="col-sm-12">
		<h2>Web Server</h2>
	</div>
</div>
<div class="row">
	<div class="col-md-4 form-group">
		<div class="checkbox">
			<label for="web_interface">
				<input type="checkbox" name="web_interface" id="web_interface" value="on" `)
	// line 117, offset 81 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "WebInterface")
		if err == nil && stick.CoerceBool(val) {
			// line 117, offset 106 in manage/edit.html.twig
			fmt.Fprint(output, `checked `)
		}
	}
	// line 117, offset 125 in manage/edit.html.twig
	fmt.Fprint(output, `> Enable Web Interface
			</label>
		</div>
		<label for="http_host_port">HTTP Listen Host and Port</label>
		<input class="form-control" name="http_host_port" id="http_host_port" placeholder=":3000" value="`)
	// line 121, offset 99 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "HTTPHostPort")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 121, offset 124 in manage/edit.html.twig
	fmt.Fprint(output, `">
	</div>
</div>
<div class="row">
	<div class="col-sm-12">
		<h3>HTTP(S) Authentication</h3>
	</div>
</div>
<div class="row">
	<div class="col-sm-12">
		<div class="checkbox">
			<label for="http_auth">
				<input type="checkbox" name="http_auth" id="http_auth" value="on" `)
	// line 133, offset 73 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "HTTPAuth")
		if err == nil && stick.CoerceBool(val) {
			// line 133, offset 94 in manage/edit.html.twig
			fmt.Fprint(output, `checked `)
		}
	}
	// line 133, offset 113 in manage/edit.html.twig
	fmt.Fprint(output, `> Enable HTTP BasicAuth
			</label>
		</div>
	</div>
</div>
<div class="row">
	<div class="col-md-4 form-group">
		<label for="auth_username">Username</label>
		<input class="form-control" name="auth_username" id="auth_username" placeholder="Username" value="`)
	// line 141, offset 100 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "AuthUsername")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 141, offset 125 in manage/edit.html.twig
	fmt.Fprint(output, `">
	</div>
	<div class="col-md-4 form-group">
		<label for="auth_password">Password</label>
		<input class="form-control" name="auth_password" id="auth_password" placeholder="Password" value="`)
	// line 145, offset 100 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "AuthPassword")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 145, offset 125 in manage/edit.html.twig
	fmt.Fprint(output, `">
	</div>
</div>
<div class="row">
	<div class="col-sm-12">
		<h3>HTTPS</h3>
	</div>
</div>
<div class="row">
	<div class="col-sm-12">
		<div class="checkbox">
			<label for="https">
				<input type="checkbox" name="https" id="https" value="on" `)
	// line 157, offset 65 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "HTTPS")
		if err == nil && stick.CoerceBool(val) {
			// line 157, offset 83 in manage/edit.html.twig
			fmt.Fprint(output, `checked `)
		}
	}
	// line 157, offset 102 in manage/edit.html.twig
	fmt.Fprint(output, `> Enable HTTPS
			</label>
		</div>
		<div class="checkbox">
			<label for="require_https">
				<input type="checkbox" name="require_https" id="require_https" value="on" `)
	// line 162, offset 81 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "RequireHTTPS")
		if err == nil && stick.CoerceBool(val) {
			// line 162, offset 106 in manage/edit.html.twig
			fmt.Fprint(output, `checked `)
		}
	}
	// line 162, offset 125 in manage/edit.html.twig
	fmt.Fprint(output, `> Require HTTPS
			</label>
		</div>
	</div>
</div>
<div class="row">
	<div class="col-md-4 form-group">
		<label for="nick">SSL Listen Host and Port</label>
		<input class="form-control" name="ssl_host_port" id="ssl_host_port" placeholder=":3443" value="`)
	// line 170, offset 97 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "SSLHostPort")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 170, offset 121 in manage/edit.html.twig
	fmt.Fprint(output, `">
	</div>
</div>
<div class="row">
	<div class="col-md-4 form-group">
		<label for="nick">SSL Certificate File</label>
		<input class="form-control" name="ssl_cert_file" id="ssl_cert_file" placeholder="/path/to/cert.pem" value="`)
	// line 176, offset 109 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "SSLCertFile")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 176, offset 133 in manage/edit.html.twig
	fmt.Fprint(output, `">
	</div>
	<div class="col-md-4 form-group">
		<label for="username">SSL Certificate Key File</label>
		<input class="form-control" name="ssl_cert_key" id="ssl_cert_key" placeholder="/path/to/key.pem" value="`)
	// line 180, offset 106 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "SSLCertKey")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 180, offset 129 in manage/edit.html.twig
	fmt.Fprint(output, `">
	</div>
</div>
<div class="row">
	<div class="col-md-6 form-group">
		<div class="alert alert-warning">
			<div class="row">
				<div class="col-md-10">
					<h4><i class="fa fa-exclamation-triangle"></i> Notice</h4>
					<p>squIRCy2 may need to be restarted for changes to take effect.</p>
				</div>
			</div>
			<div class="row">
				<div class="col-md-10">
					<button class="btn btn-primary form-control" id="save_button">Save</button>
				</div>
			</div>
		</div>
	</div>
</div>
</form>
<form action="/manage/import-scripts" method="post">
<div id="confirm-import" class="modal fade" tabindex="-1" role="dialog">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title">Import Scripts from Filesystem</h4>
			</div>
			<div class="modal-body">
				<p>Continue importing scripts from filesystem?</p>
				<div class="alert alert-warning"><strong><i class="fa fa-info-circle"></i> Note —</strong> Existing scripts will be updated.</div>
				<div class="form-group">
					<label for="scripts_import_path">Scripts stored in squIRCy2's database will be imported from:</label>
					<input class="form-control" name="scripts_import_path" id="scripts_import_path" value="`)
	// line 214, offset 92 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "ScriptsPath")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 214, offset 116 in manage/edit.html.twig
	fmt.Fprint(output, `">
				</div>

			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				<button type="submit" class="btn btn-primary">Import!</button>
			</div>
		</div>
	</div>
</div>
</form>
<form action="/manage/export-scripts" method="post">
<div id="confirm-export" class="modal fade" tabindex="-1" role="dialog">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title">Export Scripts to Filesystem</h4>
			</div>
			<div class="modal-body">
				<p>Continue exporting scripts to filesystem?</p>
				<div class="alert alert-warning">
					<p><strong><i class="fa fa-info-circle"></i> Note —</strong> Existing scripts will be updated.</p>
				</div>
				<div class="form-group">
					<label for="scripts_export_path">Scripts stored in squIRCy2's database will be exported to:</label>
					<input class="form-control" name="scripts_export_path" id="scripts_export_path" value="`)
	// line 241, offset 92 in manage/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["config"], "ScriptsPath")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 241, offset 116 in manage/edit.html.twig
	fmt.Fprint(output, `">
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
				<button type="submit" class="btn btn-primary">Export!</button>
			</div>
		</div>
	</div>
</div>
</form>
`)
}
func blockManageEditHtmlTwigAdditionalJavascripts(env *stick.Env, output io.Writer, ctx map[string]stick.Value) {
	// line 254, offset 34 in manage/edit.html.twig
	fmt.Fprint(output, `
<script type="text/javascript">
	$(function() {
	    $('#import-scripts').on('click', function(e) {
	        e.preventDefault();
	        e.stopPropagation();
	        $('#confirm-import').modal('show');
		});

        $('#export-scripts').on('click', function(e) {
            e.preventDefault();
            e.stopPropagation();
            $('#confirm-export').modal('show');
        });
	})
</script>
`)
}

func TemplateManageEditHtmlTwig(env *stick.Env, output io.Writer, ctx map[string]stick.Value) {
	// line 1, offset 0 in layout.html.twig
	fmt.Fprint(output, `<!DOCTYPE html>
<html>
<head>
  <title>squIRCy</title>
  <script src="//cdn.jsdelivr.net/jquery/2.1.1/jquery.min.js"></script>
  <script src="//cdn.jsdelivr.net/bootstrap/3.2.0/js/bootstrap.min.js"></script>
  <script src="//cdn.jsdelivr.net/momentjs/2.8.1/moment.min.js"></script>
  <link rel="stylesheet" href="//cdn.jsdelivr.net/bootstrap/3.2.0/css/bootstrap.min.css">
  <link rel="stylesheet" href="//cdn.jsdelivr.net/fontawesome/4.2.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="/css/style.css">
</head>

<body>
	<div id="main-container" class="container">
		<div class="row">
			<div class="col-md-12">
			`)
	// line 17, offset 6 in layout.html.twig
	blockManageEditHtmlTwigContent(env, output, ctx)
	// line 18, offset 17 in layout.html.twig
	fmt.Fprint(output, `
			</div>
		</div>
	</div>

	<nav id="main-nav" class="navbar navbar-default navbar-fixed-top" role="navigation">
	  	<div class="container">
			<div class="navbar-header">
				<a class="navbar-brand" href="https://github.com/veonik/squircy2">squIRCy2</a>
        	</div>
			<ul class="nav navbar-nav">
				<li><a href="/">Dashboard</a></li>
				<li><a href="/script">Scripts</a></li>
				<li><a href="/webhook">Webhooks</a></li>
				<li><a href="/manage">Settings</a></li>
				<li class="divider">&nbsp;</li>
				<li><a href="/repl">REPL</a></li>
			</ul>
			<ul class="nav navbar-nav pull-right">
				<li><a id="reinit" title="Re-initialize scripts" href="/script/reinit"><i class="fa fa-refresh"></i></a></li>
		        <li><a class="post-action" id="connect-button" style="display: none" href="/connect"><i class="fa fa-power-off"></i> Connect</a></li>
				<li><a class="post-action" id="disconnect-button" style="display: none" href="/disconnect"><i class="fa fa-power-off"></i> Disconnect</a></li>
				<li><a class="post-action" id="connecting-button" style="display: none" href="/disconnect"><i class="fa fa-power-off"></i> Connecting...</a></li>
		      </ul>
	  	</div>
	</nav>

    `)
	// line 1, offset 0 in _page_javascripts.html.twig
	fmt.Fprint(output, `<script type="text/javascript">
$(function() {
    var es = window.squIRCyEvents = new EventSource('/event');

	var $connectBtn = $('#connect-button');
	var $disconnectBtn = $('#disconnect-button');
	var $connectingBtn = $('#connecting-button');
    es.addEventListener("irc.CONNECTING", function() {
        $connectingBtn.show();
		$disconnectBtn.add($connectBtn).hide();
    });
    es.addEventListener("irc.CONNECT", function() {
        $disconnectBtn.show();
		$connectBtn.add($connectingBtn).hide();
    });
    es.addEventListener("irc.DISCONNECT", function() {
        $connectBtn.show();
        $disconnectBtn.add($connectingBtn).hide();
    });

	var $postLinks = $('.post-action');
	$postLinks.on('click', function(e) {
		e.preventDefault();
		
		var url = $(this).attr('href');
		$.ajax({
			url: url,
			type: 'post'
		});
	});
	
	var $reinit = $('#reinit').tooltip({
		placement: 'bottom',
		container: 'body'
	});
	$reinit.on('click', function(e) {
		e.preventDefault();
		
		if (confirm('Are you sure you want to reinitialize all scripts?')) {
			var url = $(this).attr('href');
			$.ajax({
				url: url,
				type: 'post'
			})
		}
	});

	$.ajax({
		url: '/status',
		type: 'get',
		dataType: 'json',
		success: function(response) {
			if (response.Status == 2) {
				$disconnectBtn.show();
				$connectBtn.add($connectingBtn).hide();
			} else if (response.Status == 1) {
				$connectingBtn.show();
				$disconnectBtn.add($connectBtn).hide();
			} else {
				$connectBtn.show();
				$disconnectBtn.add($connectingBtn).hide();
			}
		}
	});
});
</script>`)
	// line 45, offset 47 in layout.html.twig
	fmt.Fprint(output, `
    `)
	// line 46, offset 7 in layout.html.twig
	blockManageEditHtmlTwigAdditionalJavascripts(env, output, ctx)
	// line 47, offset 18 in layout.html.twig
	fmt.Fprint(output, `
</body>

</html>
`)
	// line 1, offset 32 in manage/edit.html.twig
	fmt.Fprint(output, `

`)
	// line 252, offset 14 in manage/edit.html.twig
	fmt.Fprint(output, `

`)
}
