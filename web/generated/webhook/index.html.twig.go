// Code generated by stickgen.
// DO NOT EDIT!

package webhook

import (
	"fmt"
	"github.com/tyler-sommer/stick"
	"io"
)

func blockWebhookIndexHtmlTwigContent(env *stick.Env, output io.Writer, ctx map[string]stick.Value) {
	// line 3, offset 19 in webhook/index.html.twig
	fmt.Fprint(output, `
<div class="row">
	<div class="col-sm-6">
		<h4>Webhook Management</h4>
	</div>
	<div class="col-sm-6">
		<a class="btn btn-default btn-sm pull-right" href="https://squircy.com/webhooks.html" target="_blank">Documentation <i class="fa fa-external-link"></i></a>
	</div>
</div>
`)
	// line 12, offset 3 in webhook/index.html.twig
	{
		
		var fnval stick.Value = ""
		if fn, ok := env.Filters["length"]; ok {
			fnval = fn(nil, ctx["webhooks"], )
		}
		if stick.CoerceBool(stick.CoerceNumber(fnval) > stick.CoerceNumber(0)) {
			// line 12, offset 30 in webhook/index.html.twig
			fmt.Fprint(output, `
<table class="table table-bordered table-striped">
	<tr>
	    <th>Title</th>
		<th>URL</th>
		<th>Key</th>
		<th>Header</th>
		<th><a href="/webhook/new" class="btn btn-primary"><i class="fa fa-plus"></i> New Webhook</a></th>
	</tr>
	`)
			// line 21, offset 4 in webhook/index.html.twig
			stick.Iterate(ctx["webhooks"], func(_, el stick.Value, loop stick.Loop) (brk bool, err error) {
				// line 21, offset 25 in webhook/index.html.twig
				fmt.Fprint(output, `
	<tr>
	    <td>`)
				// line 23, offset 9 in webhook/index.html.twig
				{
					val, err := stick.GetAttr(el, "Title")
					if err == nil {
						fmt.Fprint(output, val)
					}
				}
				// line 23, offset 23 in webhook/index.html.twig
				fmt.Fprint(output, `</td>
		<td><a href="/webhooks/`)
				// line 24, offset 25 in webhook/index.html.twig
				{
					val, err := stick.GetAttr(el, "ID")
					if err == nil {
						fmt.Fprint(output, val)
					}
				}
				// line 24, offset 36 in webhook/index.html.twig
				fmt.Fprint(output, `">/webhooks/`)
				// line 24, offset 48 in webhook/index.html.twig
				{
					val, err := stick.GetAttr(el, "ID")
					if err == nil {
						fmt.Fprint(output, val)
					}
				}
				// line 24, offset 59 in webhook/index.html.twig
				fmt.Fprint(output, `</a></td>
		<td>`)
				// line 25, offset 6 in webhook/index.html.twig
				{
					val, err := stick.GetAttr(el, "Key")
					if err == nil {
						fmt.Fprint(output, val)
					}
				}
				// line 25, offset 18 in webhook/index.html.twig
				fmt.Fprint(output, `</td>
		<td>`)
				// line 26, offset 6 in webhook/index.html.twig
				{
					val, err := stick.GetAttr(el, "SignatureHeader")
					if err == nil {
						fmt.Fprint(output, val)
					}
				}
				// line 26, offset 30 in webhook/index.html.twig
				fmt.Fprint(output, `</td>
		<td>
			<a href="/webhook/`)
				// line 28, offset 21 in webhook/index.html.twig
				{
					val, err := stick.GetAttr(el, "ID")
					if err == nil {
						fmt.Fprint(output, val)
					}
				}
				// line 28, offset 32 in webhook/index.html.twig
				fmt.Fprint(output, `/edit" class="btn btn-default"><i class="fa fa-edit"></i> Edit</a>
			<div class="btn-group pull-right">
				`)
				// line 30, offset 7 in webhook/index.html.twig
				{
					val, err := stick.GetAttr(el, "Enabled")
					if err == nil && stick.CoerceBool(val) {
						// line 30, offset 23 in webhook/index.html.twig
						fmt.Fprint(output, `
					<a href="/webhook/`)
						// line 31, offset 23 in webhook/index.html.twig
						{
							val, err := stick.GetAttr(el, "ID")
							if err == nil {
								fmt.Fprint(output, val)
							}
						}
						// line 31, offset 34 in webhook/index.html.twig
						fmt.Fprint(output, `/toggle" class="toggle btn btn-warning">Disable</a>
				`)
					} else {
						// line 32, offset 14 in webhook/index.html.twig
						fmt.Fprint(output, `
					<a href="/webhook/`)
						// line 33, offset 23 in webhook/index.html.twig
						{
							val, err := stick.GetAttr(el, "ID")
							if err == nil {
								fmt.Fprint(output, val)
							}
						}
						// line 33, offset 34 in webhook/index.html.twig
						fmt.Fprint(output, `/toggle" class="toggle btn btn-success">Enable</a>
				`)
					}
				}
				// line 34, offset 15 in webhook/index.html.twig
				fmt.Fprint(output, `
				<a href="/webhook/`)
				// line 35, offset 22 in webhook/index.html.twig
				{
					val, err := stick.GetAttr(el, "ID")
					if err == nil {
						fmt.Fprint(output, val)
					}
				}
				// line 35, offset 33 in webhook/index.html.twig
				fmt.Fprint(output, `/remove" class="remove btn btn-danger">Remove</a>
			</div>
		</td>
	</tr>
	`)
				return false, nil
			})
			// line 39, offset 13 in webhook/index.html.twig
			fmt.Fprint(output, `
</table>
`)
		} else {
			// line 41, offset 10 in webhook/index.html.twig
			fmt.Fprint(output, `
<div class="panel panel-primary">
	<div class="panel-heading"><i class="fa fa-info-circle"></i> No webhooks created, yet.</div>
	<div class="panel-body">
		<p class="lead">Use webhooks to integrate squIRCy with GitHub, Slack, or anything really!</p>
		<p>
			Webhooks are unique links that trigger an event within the bot when they are loaded. Scripts may bind to these
			webhook events and when a given webhook is invoked, any bound event listeners for that webhook will also be invoked.
		</p>
		<p>
			Anything capable of sending an HTTP request when something interesting happens can be made to support this type of integration.
		</p>
		<p>
			Check out the <a href="https://squircy.com/webhooks.html" target="_blank">Webhooks documentation page</a> on the squIRCy2 website for a full overview.
		</p>
	</div>
	<div class="panel-footer">
		<a href="/webhook/new" class="btn btn-primary btn"><i class="fa fa-plus"></i> Create New Webhook</a>
	</div>
</div>
`)
		}
	}
	// line 61, offset 11 in webhook/index.html.twig
	fmt.Fprint(output, `
`)
}
func blockWebhookIndexHtmlTwigAdditionalJavascripts(env *stick.Env, output io.Writer, ctx map[string]stick.Value) {
	// line 64, offset 34 in webhook/index.html.twig
	fmt.Fprint(output, `
<script type="text/javascript">
$(function() {
	$('.remove').on('click', function(e) {
		e.preventDefault();
		
		if (confirm('Are you sure you want to delete this webhook?')) {
			var url = $(this).attr('href');
			$.ajax({
				url: url,
				type: 'post',
				success: function() {
					window.location.reload();
				}
			});
		}
	});

	$('.toggle').on('click', function(e) {
		e.preventDefault();

		var url = $(this).attr('href');
		$.ajax({
			url: url,
			type: 'post',
			success: function() {
				window.location.reload();
			}
		});
	});
});
</script>
`)
}

func TemplateWebhookIndexHtmlTwig(env *stick.Env, output io.Writer, ctx map[string]stick.Value) {
	// line 1, offset 0 in layout.html.twig
	fmt.Fprint(output, `<!DOCTYPE html>
<html>
<head>
  <title>squIRCy</title>
  <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"></script>
  <script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/bootswatch/3.4.0/cyborg/bootstrap.min.css">
  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="/css/style.css">
</head>

<body>
	<div id="main-container" class="container">
		<div class="row">
			<div class="col-md-12">
			`)
	// line 17, offset 6 in layout.html.twig
	blockWebhookIndexHtmlTwigContent(env, output, ctx)
	// line 18, offset 17 in layout.html.twig
	fmt.Fprint(output, `
			</div>
		</div>
	</div>

	<nav id="main-nav" class="navbar navbar-inverse navbar-fixed-top" role="navigation">
	  	<div class="container">
			<div class="navbar-header">
				<a class="navbar-brand" href="https://squircy.com" target="_blank">squIRCy</a>
        	</div>
			<ul class="nav navbar-nav">
				<li><a href="/">Dashboard</a></li>
				<li><a href="/script">Scripts</a></li>
				<li><a href="/webhook">Webhooks</a></li>
				<li><a href="/manage">Settings</a></li>
				<li class="divider">&nbsp;</li>
				<li><a href="/repl">REPL</a></li>
			</ul>
			<ul class="nav navbar-nav pull-right">
				<li><a id="reinit" title="Re-initialize scripts" href="/script/reinit"><i class="fa fa-refresh"></i></a></li>
		        <li><a class="post-action" id="connect-button" style="display: none" href="/connect"><i class="fa fa-power-off"></i> Connect</a></li>
				<li><a class="post-action" id="disconnect-button" style="display: none" href="/disconnect"><i class="fa fa-power-off"></i> Disconnect</a></li>
				<li><a class="post-action" id="connecting-button" style="display: none" href="/disconnect"><i class="fa fa-power-off"></i> Connecting...</a></li>
		      </ul>
	  	</div>
	</nav>

    `)
	// line 1, offset 0 in _page_javascripts.html.twig
	fmt.Fprint(output, `<script type="text/javascript">
$(function() {
    var es = window.squIRCyEvents = new EventSource('/event');

	var $connectBtn = $('#connect-button');
	var $disconnectBtn = $('#disconnect-button');
	var $connectingBtn = $('#connecting-button');
    es.addEventListener("irc.CONNECTING", function() {
        $connectingBtn.show();
		$disconnectBtn.add($connectBtn).hide();
    });
    es.addEventListener("irc.CONNECT", function() {
        $disconnectBtn.show();
		$connectBtn.add($connectingBtn).hide();
    });
    es.addEventListener("irc.DISCONNECT", function() {
        $connectBtn.show();
        $disconnectBtn.add($connectingBtn).hide();
    });

	var $postLinks = $('.post-action');
	$postLinks.on('click', function(e) {
		e.preventDefault();
		
		var url = $(this).attr('href');
		$.ajax({
			url: url,
			type: 'post'
		});
	});
	
	var $reinit = $('#reinit').tooltip({
		placement: 'bottom',
		container: 'body'
	});
	$reinit.on('click', function(e) {
		e.preventDefault();
		
		if (confirm('Are you sure you want to reinitialize all scripts?')) {
			var url = $(this).attr('href');
			$.ajax({
				url: url,
				type: 'post'
			})
		}
	});

	$.ajax({
		url: '/status',
		type: 'get',
		dataType: 'json',
		success: function(response) {
			if (response.Status == 2) {
				$disconnectBtn.show();
				$connectBtn.add($connectingBtn).hide();
			} else if (response.Status == 1) {
				$connectingBtn.show();
				$disconnectBtn.add($connectBtn).hide();
			} else {
				$connectBtn.show();
				$disconnectBtn.add($connectingBtn).hide();
			}
		}
	});
});
</script>`)
	// line 45, offset 47 in layout.html.twig
	fmt.Fprint(output, `
    `)
	// line 46, offset 7 in layout.html.twig
	blockWebhookIndexHtmlTwigAdditionalJavascripts(env, output, ctx)
	// line 47, offset 18 in layout.html.twig
	fmt.Fprint(output, `
</body>

</html>
`)
	// line 1, offset 32 in webhook/index.html.twig
	fmt.Fprint(output, `

`)
	// line 62, offset 14 in webhook/index.html.twig
	fmt.Fprint(output, `

`)
	// line 96, offset 14 in webhook/index.html.twig
	fmt.Fprint(output, `
`)
}
