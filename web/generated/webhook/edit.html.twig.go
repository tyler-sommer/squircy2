// Code generated by stickgen.
// DO NOT EDIT!

package webhook

import (
	"fmt"
	"io"

	"github.com/tyler-sommer/stick"
)

func blockWebhookEditHtmlTwigContent(env *stick.Env, output io.Writer, ctx map[string]stick.Value) {
	// line 3, offset 19 in webhook/edit.html.twig
	fmt.Fprint(output, `
<div class="row">
	<div class="col-sm-6">
		<h4>Modify Webhook</h4>
	</div>
	<div class="col-sm-6">
		<a class="btn btn-default btn-sm pull-right" href="https://squircy.com/resources/webhooks.html" target="_blank">Documentation <i class="fa fa-external-link"></i></a>
	</div>
</div>
<form method="post" action="/webhook/`)
	// line 12, offset 37 in webhook/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["webhook"], "ID")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 12, offset 53 in webhook/edit.html.twig
	fmt.Fprint(output, `/update">
<div class="row">
	<div class="col-md-7">
		<div class="row">
			<div class="col-md-5 form-group">
				<label for="hook-title">Title</label>
				<input class="form-control" id="hook-title" name="title" required placeholder="A Descriptive Title" value="`)
	// line 18, offset 111 in webhook/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["webhook"], "Title")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 18, offset 130 in webhook/edit.html.twig
	fmt.Fprint(output, `">
			</div>
			<div class="col-md-4 form-group">
				<label for="signature">Signature Header</label>
				<input class="form-control" id="signature" name="signature" required placeholder="Header name containing payload signature" value="`)
	// line 22, offset 135 in webhook/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["webhook"], "SignatureHeader")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 22, offset 164 in webhook/edit.html.twig
	fmt.Fprint(output, `">
			</div>
		</div>
		<div class="row" id="webhook_key_container">
			<div class="col-md-8 form-group">
				<label class="control-label" for="webhook_key">Key</label>
				<div class="input-group">
					<input class="form-control" id="webhook_key" name="key" readonly aria-readonly="true" placeholder="Header name containing payload signature" value="`)
	// line 29, offset 153 in webhook/edit.html.twig
	{
		val, err := stick.GetAttr(ctx["webhook"], "Key")
		if err == nil {
			fmt.Fprint(output, val)
		}
	}
	// line 29, offset 170 in webhook/edit.html.twig
	fmt.Fprint(output, `">
					<a class="input-group-addon" href="javascript:;" id="webhook_key_copy"><i class="fa fa-copy"></i> Copy</a>
				</div>
			</div>
		</div>
		<div class="row">
			<div class="col-md-5">
				<button class="form-control btn btn-primary">Save Changes</button>
			</div>
		</div>
	</div>
	<div class="col-md-5">
		`)
	// line 1, offset 0 in webhook/_more_info.html.twig
	fmt.Fprint(output, `<div class="panel panel-primary">
    <div class="panel-heading"><i class="fa fa-question-circle"></i> More Info</div>
    <div class="panel-body">
        <p>Each incoming webhook request must contain a valid signature in the signature header defined here.</p>
        <p>A key will be automatically generated when the webhook is created, and the key is used to derive a signature unique to the payload body.</p>
        <p>A <a href="https://squircy.com/resources/webhooks.html" target="_blank">reference Webhook sender implementation</a> is available on the squIRCy website.</p>
    </div>
</div>`)
	// line 41, offset 46 in webhook/edit.html.twig
	fmt.Fprint(output, `
	</div>
</div>
</form>
`)
}
func blockWebhookEditHtmlTwigAdditionalJavascripts(env *stick.Env, output io.Writer, ctx map[string]stick.Value) {
	// line 47, offset 34 in webhook/edit.html.twig
	fmt.Fprint(output, `
<script type="text/javascript">
	$(function() {
		const $keyInput = $(document.getElementById('webhook_key'));
		const $keyContainer = $(document.getElementById('webhook_key_container'));
		const $copyKey = $(document.getElementById('webhook_key_copy'));
		const originalCopyKeyContents = $copyKey.html();

		$keyContainer.on('click', function(e) {
			e.preventDefault();
			$keyInput.select();
			document.execCommand('copy');
			$copyKey.html('Copied');
			$keyContainer.once('mouseover', function() {
				$copyKey.html(originalCopyKeyContents)
			})
		});

	});
</script>
`)
}

func TemplateWebhookEditHtmlTwig(env *stick.Env, output io.Writer, ctx map[string]stick.Value) {
	// line 1, offset 0 in layout.html.twig
	fmt.Fprint(output, `<!DOCTYPE html>
<html>
<head>
  <title>squIRCy</title>
  <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="//cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.4.1/js/bootstrap.min.js"></script>
  <script src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/bootswatch/3.4.0/cyborg/bootstrap.min.css">
  <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <link rel="stylesheet" href="/css/style.css">
</head>

<body>
	<div id="main-container" class="container">
		<div class="row">
			<div class="col-md-12">
			`)
	// line 17, offset 6 in layout.html.twig
	blockWebhookEditHtmlTwigContent(env, output, ctx)
	// line 18, offset 17 in layout.html.twig
	fmt.Fprint(output, `
			</div>
		</div>
	</div>

	<nav id="main-nav" class="navbar navbar-inverse navbar-fixed-top" role="navigation">
	  	<div class="container">
			<div class="navbar-header">
				<a class="navbar-brand" href="https://squircy.com" target="_blank">squIRCy</a>
        	</div>
			<ul class="nav navbar-nav">
				<li><a href="/">Dashboard</a></li>
				<li><a href="/script">Scripts</a></li>
				<li><a href="/webhook">Webhooks</a></li>
				<li><a href="/manage">Settings</a></li>
				<li class="divider">&nbsp;</li>
				<li><a href="/repl">REPL</a></li>
			</ul>
			<ul class="nav navbar-nav pull-right">
				<li><a id="reinit" title="Re-initialize scripts" href="/script/reinit"><i class="fa fa-refresh"></i></a></li>
		        <li><a class="post-action" id="connect-button" style="display: none" href="/connect"><i class="fa fa-power-off"></i> Connect</a></li>
				<li><a class="post-action" id="disconnect-button" style="display: none" href="/disconnect"><i class="fa fa-power-off"></i> Disconnect</a></li>
				<li><a class="post-action" id="connecting-button" style="display: none" href="/disconnect"><i class="fa fa-power-off"></i> Connecting...</a></li>
		      </ul>
	  	</div>
	</nav>

    `)
	// line 1, offset 0 in _page_javascripts.html.twig
	fmt.Fprint(output, `<script type="text/javascript">
$(function() {
    var es = window.squIRCyEvents = new EventSource('/event');

	var $connectBtn = $('#connect-button');
	var $disconnectBtn = $('#disconnect-button');
	var $connectingBtn = $('#connecting-button');
    es.addEventListener("irc.CONNECTING", function() {
        $connectingBtn.show();
		$disconnectBtn.add($connectBtn).hide();
    });
    es.addEventListener("irc.CONNECT", function() {
        $disconnectBtn.show();
		$connectBtn.add($connectingBtn).hide();
    });
    es.addEventListener("irc.DISCONNECT", function() {
        $connectBtn.show();
        $disconnectBtn.add($connectingBtn).hide();
    });

	var $postLinks = $('.post-action');
	$postLinks.on('click', function(e) {
		e.preventDefault();
		
		var url = $(this).attr('href');
		$.ajax({
			url: url,
			type: 'post'
		});
	});
	
	var $reinit = $('#reinit').tooltip({
		placement: 'bottom',
		container: 'body'
	});
	$reinit.on('click', function(e) {
		e.preventDefault();
		
		if (confirm('Are you sure you want to reinitialize all scripts?')) {
			var url = $(this).attr('href');
			$.ajax({
				url: url,
				type: 'post'
			})
		}
	});

	$.ajax({
		url: '/status',
		type: 'get',
		dataType: 'json',
		success: function(response) {
			if (response.Status == 2) {
				$disconnectBtn.show();
				$connectBtn.add($connectingBtn).hide();
			} else if (response.Status == 1) {
				$connectingBtn.show();
				$disconnectBtn.add($connectBtn).hide();
			} else {
				$connectBtn.show();
				$disconnectBtn.add($connectingBtn).hide();
			}
		}
	});
});
</script>`)
	// line 45, offset 47 in layout.html.twig
	fmt.Fprint(output, `
    `)
	// line 46, offset 7 in layout.html.twig
	blockWebhookEditHtmlTwigAdditionalJavascripts(env, output, ctx)
	// line 47, offset 18 in layout.html.twig
	fmt.Fprint(output, `
</body>

</html>
`)
	// line 1, offset 32 in webhook/edit.html.twig
	fmt.Fprint(output, `

`)
	// line 45, offset 14 in webhook/edit.html.twig
	fmt.Fprint(output, `

`)
}
